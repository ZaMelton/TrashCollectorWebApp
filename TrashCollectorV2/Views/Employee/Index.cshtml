@model TrashCollectorV2.Models.ViewModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h1>Welcome, @Model.Employee.Name</h1>
<hr />
<h4>Today's Pickups in Area @Model.Employee.ZipCode</h4>
<a class="btn btn-outline-primary" asp-action="FilterByDay">Filter By Day</a>
<br />
<br />
<table class="table table-hover">
    <thead>
        <tr class="table-dark">
            <th>
                @Html.DisplayNameFor(model => model.Customer.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customer.Address.StreetAddress)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customer.Address.City)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.CustomerList)
        {
            <tr class="table-light">
                <td>
                    <a asp-action="CustomerDetails" asp-route-customerId="@item.Id">@item.Name</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address.StreetAddress)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address.City)
                </td>
                <td>
                    <a class="btn btn-outline-success" asp-action="ConfirmPickup" asp-route-accountId="@item.AccountId">Confirm Pickup</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    function initializeMap() {
        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 15,
            center: { lat: 43.0389, lng: -87.9065 }
        });
        var geocoder = new google.maps.Geocoder();

        geocodeAddress(geocoder, map);
    }

    function geocodeAddress(geocoder, resultsMap) {
        //declare initial array to hold addresses
        var addresses = [];

        //add the customers address as a string to the addresses array
        @foreach(var customer in Model.CustomerList)
        {
            @:addresses.push("@customer.Address.StreetAddress + @customer.Address.City + @customer.Address.State")
        }

        //iterate through the array to print each ping on the map
        for (i = 0; i < @Model.CustomerList.Count; i++) {
            var address = addresses[i];
            geocoder.geocode({ 'address': address }, function (results, status) {
            if (status === 'OK') {
                resultsMap.setCenter(results[0].geometry.location);
                var marker = new google.maps.Marker({
                    map: resultsMap,
                    position: results[0].geometry.location
                });
            } else {
                alert('Geocode was not successful for the following reason: ' + status);
            }
        });
        }
    }
</script>

<body onload="initializeMap()">
    <div id="map" style="height:300px;"></div>
</body>

<script async defer
        src="@Api_Key.MY_KEY">
</script>

<br />
<div>
    <a class="btn btn-outline-primary" asp-action="Index">Home</a>
</div>
<br />
